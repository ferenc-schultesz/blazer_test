@page "/invoices"
@using Newtonsoft.Json;
@inject HttpClient Http

<h2>Test invoices component with static data</h2>

<p>It is using only client side code, uses dependency injection, the serviceis 
    implemented with C# and injected in the html file. Then it is called 
    with C# also from the html file (technical cshtml)</p>

@if (users == null)
{
    <p><em>Loading..</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Tax%</th>
                <th>Tax amount</th>
                <th>Total</th>
                <th>Paid</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in users)
            {
            <tr>
                <td>@user.email</td>
                <td>@user.name</td>
                <td>@user.name</td>
                <td>@user.name</td>
                <td>@user.name</td>
            </tr>
            }
        </tbody>
    </table>
}

@functions {
    //IEnumerable<Invoice> invoices = 
    Dictionary<string, string> posts;

    protected override async Task OnInitAsync()
    {
        var result = await Http.GetAsync("https://jsonplaceholder.typicode.com/posts");
        if (result.IsSuccessStatusCode)
        {
            var details = await result.Content.ReadAsStringAsync();
            posts = JsonConvert.DeserializeObject<Dictionary<string, string>>(details);
        }


    }
}done
